---
// Contact form state management
let formState = 'idle'; // 'idle' | 'submitting' | 'success' | 'error'
let formMessage = '';

const handleSubmit = async (event: Event) => {
  event.preventDefault();
  formState = 'submitting';

  const form = event.target as HTMLFormElement;
  const formData = new FormData(form);

  try {
    const response = await fetch(form.action, {
      method: form.method,
      body: formData,
      headers: {
        'Accept': 'application/json'
      }
    });

    if (response.ok) {
      formState = 'success';
      formMessage = 'Thank you! Your message has been sent successfully.';
      form.reset();
    } else {
      throw new Error('Form submission failed');
    }
  } catch (error) {
    formState = 'error';
    formMessage = 'Sorry, there was an error sending your message. Please try again.';
  }
};
---

<form
  action="https://formspree.io/f/mkgvygae"
  method="POST"
  class="space-y-6"
  onsubmit="handleSubmit(event)"
>
  <!-- Name Field -->
  <div>
    <label
      for="name"
      class="block text-sm font-medium mb-2 text-grey-300"
    >
      Name *
    </label>
    <input
      type="text"
      id="name"
      name="name"
      required
      class="w-full px-4 py-3 bg-background border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-200 text-white placeholder-grey-400"
      placeholder="Your full name"
      aria-describedby="name-error"
    />
    <div id="name-error" class="sr-only" aria-live="polite"></div>
  </div>

  <!-- Email Field -->
  <div>
    <label
      for="email"
      class="block text-sm font-medium mb-2 text-grey-300"
    >
      Email *
    </label>
    <input
      type="email"
      id="email"
      name="email"
      required
      class="w-full px-4 py-3 bg-background border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-200 text-white placeholder-grey-400"
      placeholder="your.email@company.com"
      aria-describedby="email-error"
    />
    <div id="email-error" class="sr-only" aria-live="polite"></div>
  </div>

  <!-- Message Field -->
  <div>
    <label
      for="message"
      class="block text-sm font-medium mb-2 text-grey-300"
    >
      Message *
    </label>
    <textarea
      id="message"
      name="message"
      required
      rows="6"
      class="w-full px-4 py-3 bg-background border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors duration-200 text-white placeholder-grey-400 resize-none"
      placeholder="Tell us about your project..."
      aria-describedby="message-error"
    ></textarea>
    <div id="message-error" class="sr-only" aria-live="polite"></div>
  </div>

  <!-- Honeypot Field (Hidden for Spam Protection) -->
  <div class="sr-only">
    <label for="website">Website (leave blank)</label>
    <input
      type="text"
      id="website"
      name="_gotcha"
      tabindex="-1"
      autocomplete="off"
    />
  </div>

  <!-- Submit Button -->
  <button
    type="submit"
    class={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 ${
      formState === 'submitting'
        ? 'bg-grey-600 cursor-not-allowed'
        : 'bg-primary hover:bg-primary-hover active:bg-primary-hover'
    } text-white focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background`}
    disabled={formState === 'submitting'}
    aria-describedby="form-status"
  >
    {formState === 'submitting' ? 'Sending...' : 'Send Message'}
  </button>

  <!-- Status Message (ARIA Live Region) -->
  <div
    id="form-status"
    class="mt-4 text-center"
    aria-live="polite"
    aria-atomic="true"
  >
    {formState === 'success' && (
      <div class="p-4 bg-green-500/10 border border-green-500/20 rounded-lg">
        <div class="flex items-center justify-center space-x-2">
          <svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span class="text-green-400 font-medium">{formMessage}</span>
        </div>
      </div>
    )}

    {formState === 'error' && (
      <div class="p-4 bg-red-500/10 border border-red-500/20 rounded-lg">
        <div class="flex items-center justify-center space-x-2">
          <svg class="w-5 h-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
          <span class="text-red-400 font-medium">{formMessage}</span>
        </div>
      </div>
    )}
  </div>
</form>

<style>
  /* Ensure proper focus styles for accessibility */
  input:focus, textarea:focus, button:focus {
    outline: none;
  }

  /* Loading state animation */
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  button:disabled {
    animation: pulse 2s infinite;
  }
</style>
